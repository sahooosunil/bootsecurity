<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.awt.List"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.config.EnableJpaRepositories"/>
<fullyQualifiedTypeName name="io.sks.springsecurityjpa.UserRepository"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.oauth2.client.EnableOAuth2Sso"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
<fullyQualifiedTypeName name="org.springframework.security.provisioning.InMemoryUserDetailsManager"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<fullyQualifiedTypeName name="java.util.Set"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="com.sks.securityFull.security.ApplicationUserPermission"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
<fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="com.sks.securityFull.auth.ApplicationUserDao"/>
<fullyQualifiedTypeName name="com.google.common.collect.Lists"/>
<fullyQualifiedTypeName name="com.sks.securityFull.auth.ApplicationUser"/>
<fullyQualifiedTypeName name="com.sks.securityFull.security.ApplicationUserRole"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Qualifier"/>
<fullyQualifiedTypeName name="com.sks.securityFull.auth.ApplicationUserService"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
<fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
<fullyQualifiedTypeName name="com.sks.securityFull.jwt.UsernamePasswordAuthenticationRequest"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="java.sql.Date"/>
<fullyQualifiedTypeName name="java.time.LocalDate"/>
<fullyQualifiedTypeName name="com.sks.securityFull.jwt.JwtUsernameAndPasswordAuthenticationFilter"/>
<fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
<fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
<fullyQualifiedTypeName name="com.google.common.base.Strings"/>
<fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
<fullyQualifiedTypeName name="io.jsonwebtoken.security.Keys"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
<fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
<fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
<fullyQualifiedTypeName name="io.jsonwebtoken.JwtException"/>
<fullyQualifiedTypeName name="java.util.stream.Collectors"/>
<fullyQualifiedTypeName name="java.lang.IllegalStateException"/>
<fullyQualifiedTypeName name="com.sks.securityFull.jwt.JwtTokenVerifierFilter"/>
</qualifiedTypeNameHistroy>
